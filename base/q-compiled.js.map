{"version":3,"sources":["q.js"],"names":[],"mappings":"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","file":"q-compiled.js","sourcesContent":["// vim:ts=4:sts=4:sw=4:\n/*!\n *\n * Copyright 2009-2016 Kris Kowal under the terms of the MIT\n * license found at https://github.com/kriskowal/q/blob/v1/LICENSE\n *\n * With parts by Tyler Close\n * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\n * at http://www.opensource.org/licenses/mit-license.html\n * Forked at ref_send.js version: 2009-05-11\n *\n * With parts by Mark Miller\n * Copyright (C) 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n(function (definition) {\n    \"use strict\";\n\n    // This file will function properly as a <script> tag, or a module\n    // using CommonJS and NodeJS or RequireJS module formats.  In\n    // Common/Node/RequireJS, the module exports the Q API and when\n    // executed as a simple <script>, it creates a Q global instead.\n\n    // Montage Require\n    if (typeof bootstrap === \"function\") {\n        bootstrap(\"promise\", definition);\n\n    // CommonJS\n    } else if (typeof exports === \"object\" && typeof module === \"object\") {\n        module.exports = definition();\n\n    // RequireJS\n    } else if (typeof define === \"function\" && define.amd) {\n        define(definition);\n\n    // SES (Secure EcmaScript)\n    } else if (typeof ses !== \"undefined\") {\n        if (!ses.ok()) {\n            return;\n        } else {\n            ses.makeQ = definition;\n        }\n\n    // <script>\n    } else if (typeof window !== \"undefined\" || typeof self !== \"undefined\") {\n        // Prefer window over self for add-on scripts. Use self for\n        // non-windowed contexts.\n        var global = typeof window !== \"undefined\" ? window : self;\n\n        // Get the `window` object, save the previous Q global\n        // and initialize Q as a global.\n        var previousQ = global.Q;\n        global.Q = definition();\n\n        // Add a noConflict function so Q can be removed from the\n        // global namespace.\n        global.Q.noConflict = function () {\n            global.Q = previousQ;\n            return this;\n        };\n\n    } else {\n        throw new Error(\"This environment was not anticipated by Q. Please file a bug.\");\n    }\n\n})(function () {\n\"use strict\";\n\nvar hasStacks = false;\ntry {\n    throw new Error();\n} catch (e) {\n    hasStacks = !!e.stack;\n}\n\n// All code after this point will be filtered from stack traces reported\n// by Q.\nvar qStartingLine = captureLine();\nvar qFileName;\n\n// shims\n\n// used for fallback in \"allResolved\"\nvar noop = function () {};\n\n// Use the fastest possible means to execute a task in a future turn\n// of the event loop.\nvar nextTick =(function () {\n    // linked list of tasks (single, with head node)\n    var head = {task: void 0, next: null};\n    var tail = head;\n    var flushing = false;\n    var requestTick = void 0;\n    var isNodeJS = false;\n    // queue for late tasks, used by unhandled rejection tracking\n    var laterQueue = [];\n\n    function flush() {\n        /* jshint loopfunc: true */\n        var task, domain;\n\n        while (head.next) {\n            head = head.next;\n            task = head.task;\n            head.task = void 0;\n            domain = head.domain;\n\n            if (domain) {\n                head.domain = void 0;\n                domain.enter();\n            }\n            runSingle(task, domain);\n\n        }\n        while (laterQueue.length) {\n            task = laterQueue.pop();\n            runSingle(task);\n        }\n        flushing = false;\n    }\n    // runs a single function in the async queue\n    function runSingle(task, domain) {\n        try {\n            task();\n\n        } catch (e) {\n            if (isNodeJS) {\n                // In node, uncaught exceptions are considered fatal errors.\n                // Re-throw them synchronously to interrupt flushing!\n\n                // Ensure continuation if the uncaught exception is suppressed\n                // listening \"uncaughtException\" events (as domains does).\n                // Continue in next event to avoid tick recursion.\n                if (domain) {\n                    domain.exit();\n                }\n                setTimeout(flush, 0);\n                if (domain) {\n                    domain.enter();\n                }\n\n                throw e;\n\n            } else {\n                // In browsers, uncaught exceptions are not fatal.\n                // Re-throw them asynchronously to avoid slow-downs.\n                setTimeout(function () {\n                    throw e;\n                }, 0);\n            }\n        }\n\n        if (domain) {\n            domain.exit();\n        }\n    }\n\n    nextTick = function (task) {\n        tail = tail.next = {\n            task: task,\n            domain: isNodeJS && process.domain,\n            next: null\n        };\n\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n\n    if (typeof process === \"object\" &&\n        process.toString() === \"[object process]\" && process.nextTick) {\n        // Ensure Q is in a real Node environment, with a `process.nextTick`.\n        // To see through fake Node environments:\n        // * Mocha test runner - exposes a `process` global without a `nextTick`\n        // * Browserify - exposes a `process.nexTick` function that uses\n        //   `setTimeout`. In this case `setImmediate` is preferred because\n        //    it is faster. Browserify's `process.toString()` yields\n        //   \"[object Object]\", while in a real Node environment\n        //   `process.nextTick()` yields \"[object process]\".\n        isNodeJS = true;\n\n        requestTick = function () {\n            process.nextTick(flush);\n        };\n\n    } else if (typeof setImmediate === \"function\") {\n        // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate\n        if (typeof window !== \"undefined\") {\n            requestTick = setImmediate.bind(window, flush);\n        } else {\n            requestTick = function () {\n                setImmediate(flush);\n            };\n        }\n\n    } else if (typeof MessageChannel !== \"undefined\") {\n        // modern browsers\n        // http://www.nonblocking.io/2011/06/windownexttick.html\n        var channel = new MessageChannel();\n        // At least Safari Version 6.0.5 (8536.30.1) intermittently cannot create\n        // working message ports the first time a page loads.\n        channel.port1.onmessage = function () {\n            requestTick = requestPortTick;\n            channel.port1.onmessage = flush;\n            flush();\n        };\n        var requestPortTick = function () {\n            // Opera requires us to provide a message payload, regardless of\n            // whether we use it.\n            channel.port2.postMessage(0);\n        };\n        requestTick = function () {\n            setTimeout(flush, 0);\n            requestPortTick();\n        };\n\n    } else {\n        // old browsers\n        requestTick = function () {\n            setTimeout(flush, 0);\n        };\n    }\n    // runs a task after all other tasks have been run\n    // this is useful for unhandled rejection tracking that needs to happen\n    // after all `then`d tasks have been run.\n    nextTick.runAfter = function (task) {\n        laterQueue.push(task);\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n    return nextTick;\n})();\n\n// Attempt to make generics safe in the face of downstream\n// modifications.\n// There is no situation where this is necessary.\n// If you need a security guarantee, these primordials need to be\n// deeply frozen anyway, and if you don’t need a security guarantee,\n// this is just plain paranoid.\n// However, this **might** have the nice side-effect of reducing the size of\n// the minified code by reducing x.call() to merely x()\n// See Mark Miller’s explanation of what this does.\n// http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming\nvar call = Function.call;\nfunction uncurryThis(f) {\n    return function () {\n        return call.apply(f, arguments);\n    };\n}\n// This is equivalent, but slower:\n// uncurryThis = Function_bind.bind(Function_bind.call);\n// http://jsperf.com/uncurrythis\n\nvar array_slice = uncurryThis(Array.prototype.slice);\n\nvar array_reduce = uncurryThis(\n    Array.prototype.reduce || function (callback, basis) {\n        var index = 0,\n            length = this.length;\n        // concerning the initial value, if one is not provided\n        if (arguments.length === 1) {\n            // seek to the first value in the array, accounting\n            // for the possibility that is is a sparse array\n            do {\n                if (index in this) {\n                    basis = this[index++];\n                    break;\n                }\n                if (++index >= length) {\n                    throw new TypeError();\n                }\n            } while (1);\n        }\n        // reduce\n        for (; index < length; index++) {\n            // account for the possibility that the array is sparse\n            if (index in this) {\n                basis = callback(basis, this[index], index);\n            }\n        }\n        return basis;\n    }\n);\n\nvar array_indexOf = uncurryThis(\n    Array.prototype.indexOf || function (value) {\n        // not a very good shim, but good enough for our one use of it\n        for (var i = 0; i < this.length; i++) {\n            if (this[i] === value) {\n                return i;\n            }\n        }\n        return -1;\n    }\n);\n\nvar array_map = uncurryThis(\n    Array.prototype.map || function (callback, thisp) {\n        var self = this;\n        var collect = [];\n        array_reduce(self, function (undefined, value, index) {\n            collect.push(callback.call(thisp, value, index, self));\n        }, void 0);\n        return collect;\n    }\n);\n\nvar object_create = Object.create || function (prototype) {\n    function Type() { }\n    Type.prototype = prototype;\n    return new Type();\n};\n\nvar object_hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\n\nvar object_keys = Object.keys || function (object) {\n    var keys = [];\n    for (var key in object) {\n        if (object_hasOwnProperty(object, key)) {\n            keys.push(key);\n        }\n    }\n    return keys;\n};\n\nvar object_toString = uncurryThis(Object.prototype.toString);\n\nfunction isObject(value) {\n    return value === Object(value);\n}\n\n// generator related shims\n\n// FIXME: Remove this function once ES6 generators are in SpiderMonkey.\nfunction isStopIteration(exception) {\n    return (\n        object_toString(exception) === \"[object StopIteration]\" ||\n        exception instanceof QReturnValue\n    );\n}\n\n// FIXME: Remove this helper and Q.return once ES6 generators are in\n// SpiderMonkey.\nvar QReturnValue;\nif (typeof ReturnValue !== \"undefined\") {\n    QReturnValue = ReturnValue;\n} else {\n    QReturnValue = function (value) {\n        this.value = value;\n    };\n}\n\n// long stack traces\n\nvar STACK_JUMP_SEPARATOR = \"From previous event:\";\n\nfunction makeStackTraceLong(error, promise) {\n    // If possible, transform the error stack trace by removing Node and Q\n    // cruft, then concatenating with the stack trace of `promise`. See #57.\n    if (hasStacks &&\n        promise.stack &&\n        typeof error === \"object\" &&\n        error !== null &&\n        error.stack &&\n        error.stack.indexOf(STACK_JUMP_SEPARATOR) === -1\n    ) {\n        var stacks = [];\n        for (var p = promise; !!p; p = p.source) {\n            if (p.stack) {\n                stacks.unshift(p.stack);\n            }\n        }\n        stacks.unshift(error.stack);\n\n        var concatedStacks = stacks.join(\"\\n\" + STACK_JUMP_SEPARATOR + \"\\n\");\n        error.stack = filterStackString(concatedStacks);\n    }\n}\n\nfunction filterStackString(stackString) {\n    var lines = stackString.split(\"\\n\");\n    var desiredLines = [];\n    for (var i = 0; i < lines.length; ++i) {\n        var line = lines[i];\n\n        if (!isInternalFrame(line) && !isNodeFrame(line) && line) {\n            desiredLines.push(line);\n        }\n    }\n    return desiredLines.join(\"\\n\");\n}\n\nfunction isNodeFrame(stackLine) {\n    return stackLine.indexOf(\"(module.js:\") !== -1 ||\n           stackLine.indexOf(\"(node.js:\") !== -1;\n}\n\nfunction getFileNameAndLineNumber(stackLine) {\n    // Named functions: \"at functionName (filename:lineNumber:columnNumber)\"\n    // In IE10 function name can have spaces (\"Anonymous function\") O_o\n    var attempt1 = /at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(stackLine);\n    if (attempt1) {\n        return [attempt1[1], Number(attempt1[2])];\n    }\n\n    // Anonymous functions: \"at filename:lineNumber:columnNumber\"\n    var attempt2 = /at ([^ ]+):(\\d+):(?:\\d+)$/.exec(stackLine);\n    if (attempt2) {\n        return [attempt2[1], Number(attempt2[2])];\n    }\n\n    // Firefox style: \"function@filename:lineNumber or @filename:lineNumber\"\n    var attempt3 = /.*@(.+):(\\d+)$/.exec(stackLine);\n    if (attempt3) {\n        return [attempt3[1], Number(attempt3[2])];\n    }\n}\n\nfunction isInternalFrame(stackLine) {\n    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);\n\n    if (!fileNameAndLineNumber) {\n        return false;\n    }\n\n    var fileName = fileNameAndLineNumber[0];\n    var lineNumber = fileNameAndLineNumber[1];\n\n    return fileName === qFileName &&\n        lineNumber >= qStartingLine &&\n        lineNumber <= qEndingLine;\n}\n\n// discover own file name and line number range for filtering stack\n// traces\nfunction captureLine() {\n    if (!hasStacks) {\n        return;\n    }\n\n    try {\n        throw new Error();\n    } catch (e) {\n        var lines = e.stack.split(\"\\n\");\n        var firstLine = lines[0].indexOf(\"@\") > 0 ? lines[1] : lines[2];\n        var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);\n        if (!fileNameAndLineNumber) {\n            return;\n        }\n\n        qFileName = fileNameAndLineNumber[0];\n        return fileNameAndLineNumber[1];\n    }\n}\n\nfunction deprecate(callback, name, alternative) {\n    return function () {\n        if (typeof console !== \"undefined\" &&\n            typeof console.warn === \"function\") {\n            console.warn(name + \" is deprecated, use \" + alternative +\n                         \" instead.\", new Error(\"\").stack);\n        }\n        return callback.apply(callback, arguments);\n    };\n}\n\n// end of shims\n// beginning of real work\n\n/**\n * Constructs a promise for an immediate reference, passes promises through, or\n * coerces promises from different systems.\n * @param value immediate reference or promise\n */\nfunction Q(value) {\n    // If the object is already a Promise, return it directly.  This enables\n    // the resolve function to both be used to created references from objects,\n    // but to tolerably coerce non-promises to promises.\n    if (value instanceof Promise) {\n        return value;\n    }\n\n    // assimilate thenables\n    if (isPromiseAlike(value)) {\n        return coerce(value);\n    } else {\n        return fulfill(value);\n    }\n}\nQ.resolve = Q;\n\n/**\n * Performs a task in a future turn of the event loop.\n * @param {Function} task\n */\nQ.nextTick = nextTick;\n\n/**\n * Controls whether or not long stack traces will be on\n */\nQ.longStackSupport = false;\n\n// enable long stacks if Q_DEBUG is set\nif (typeof process === \"object\" && process && process.env && process.env.Q_DEBUG) {\n    Q.longStackSupport = true;\n}\n\n/**\n * Constructs a {promise, resolve, reject} object.\n *\n * `resolve` is a callback to invoke with a more resolved value for the\n * promise. To fulfill the promise, invoke `resolve` with any value that is\n * not a thenable. To reject the promise, invoke `resolve` with a rejected\n * thenable, or invoke `reject` with the reason directly. To resolve the\n * promise to another thenable, thus putting it in the same state, invoke\n * `resolve` with that other thenable.\n */\nQ.defer = defer;\nfunction defer() {\n    // if \"messages\" is an \"Array\", that indicates that the promise has not yet\n    // been resolved.  If it is \"undefined\", it has been resolved.  Each\n    // element of the messages array is itself an array of complete arguments to\n    // forward to the resolved promise.  We coerce the resolution value to a\n    // promise using the `resolve` function because it handles both fully\n    // non-thenable values and other thenables gracefully.\n    var messages = [], progressListeners = [], resolvedPromise;\n\n    var deferred = object_create(defer.prototype);\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, operands) {\n        var args = array_slice(arguments);\n        if (messages) {\n            messages.push(args);\n            if (op === \"when\" && operands[1]) { // progress operand\n                progressListeners.push(operands[1]);\n            }\n        } else {\n            Q.nextTick(function () {\n                resolvedPromise.promiseDispatch.apply(resolvedPromise, args);\n            });\n        }\n    };\n\n    // XXX deprecated\n    promise.valueOf = function () {\n        if (messages) {\n            return promise;\n        }\n        var nearerValue = nearer(resolvedPromise);\n        if (isPromise(nearerValue)) {\n            resolvedPromise = nearerValue; // shorten chain\n        }\n        return nearerValue;\n    };\n\n    promise.inspect = function () {\n        if (!resolvedPromise) {\n            return { state: \"pending\" };\n        }\n        return resolvedPromise.inspect();\n    };\n\n    if (Q.longStackSupport && hasStacks) {\n        try {\n            throw new Error();\n        } catch (e) {\n            // NOTE: don't try to use `Error.captureStackTrace` or transfer the\n            // accessor around; that causes memory leaks as per GH-111. Just\n            // reify the stack trace as a string ASAP.\n            //\n            // At the same time, cut off the first line; it's always just\n            // \"[object Promise]\\n\", as per the `toString`.\n            promise.stack = e.stack.substring(e.stack.indexOf(\"\\n\") + 1);\n        }\n    }\n\n    // NOTE: we do the checks for `resolvedPromise` in each method, instead of\n    // consolidating them into `become`, since otherwise we'd create new\n    // promises with the lines `become(whatever(value))`. See e.g. GH-252.\n\n    function become(newPromise) {\n        resolvedPromise = newPromise;\n\n        if (Q.longStackSupport && hasStacks) {\n            // Only hold a reference to the new promise if long stacks\n            // are enabled to reduce memory usage\n            promise.source = newPromise;\n        }\n\n        array_reduce(messages, function (undefined, message) {\n            Q.nextTick(function () {\n                newPromise.promiseDispatch.apply(newPromise, message);\n            });\n        }, void 0);\n\n        messages = void 0;\n        progressListeners = void 0;\n    }\n\n    deferred.promise = promise;\n    deferred.resolve = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(Q(value));\n    };\n\n    deferred.fulfill = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(fulfill(value));\n    };\n    deferred.reject = function (reason) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(reject(reason));\n    };\n    deferred.notify = function (progress) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        array_reduce(progressListeners, function (undefined, progressListener) {\n            Q.nextTick(function () {\n                progressListener(progress);\n            });\n        }, void 0);\n    };\n\n    return deferred;\n}\n\n/**\n * Creates a Node-style callback that will resolve or reject the deferred\n * promise.\n * @returns a nodeback\n */\ndefer.prototype.makeNodeResolver = function () {\n    var self = this;\n    return function (error, value) {\n        if (error) {\n            self.reject(error);\n        } else if (arguments.length > 2) {\n            self.resolve(array_slice(arguments, 1));\n        } else {\n            self.resolve(value);\n        }\n    };\n};\n\n/**\n * @param resolver {Function} a function that returns nothing and accepts\n * the resolve, reject, and notify functions for a deferred.\n * @returns a promise that may be resolved with the given resolve and reject\n * functions, or rejected by a thrown exception in resolver\n */\nQ.Promise = promise; // ES6\nQ.promise = promise;\nfunction promise(resolver) {\n    if (typeof resolver !== \"function\") {\n        throw new TypeError(\"resolver must be a function.\");\n    }\n    var deferred = defer();\n    try {\n        resolver(deferred.resolve, deferred.reject, deferred.notify);\n    } catch (reason) {\n        deferred.reject(reason);\n    }\n    return deferred.promise;\n}\n\npromise.race = race; // ES6\npromise.all = all; // ES6\npromise.reject = reject; // ES6\npromise.resolve = Q; // ES6\n\n// XXX experimental.  This method is a way to denote that a local value is\n// serializable and should be immediately dispatched to a remote upon request,\n// instead of passing a reference.\nQ.passByCopy = function (object) {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return object;\n};\n\nPromise.prototype.passByCopy = function () {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return this;\n};\n\n/**\n * If two promises eventually fulfill to the same value, promises that value,\n * but otherwise rejects.\n * @param x {Any*}\n * @param y {Any*}\n * @returns {Any*} a promise for x and y if they are the same, but a rejection\n * otherwise.\n *\n */\nQ.join = function (x, y) {\n    return Q(x).join(y);\n};\n\nPromise.prototype.join = function (that) {\n    return Q([this, that]).spread(function (x, y) {\n        if (x === y) {\n            // TODO: \"===\" should be Object.is or equiv\n            return x;\n        } else {\n            throw new Error(\"Q can't join: not the same: \" + x + \" \" + y);\n        }\n    });\n};\n\n/**\n * Returns a promise for the first of an array of promises to become settled.\n * @param answers {Array[Any*]} promises to race\n * @returns {Any*} the first promise to be settled\n */\nQ.race = race;\nfunction race(answerPs) {\n    return promise(function (resolve, reject) {\n        // Switch to this once we can assume at least ES5\n        // answerPs.forEach(function (answerP) {\n        //     Q(answerP).then(resolve, reject);\n        // });\n        // Use this in the meantime\n        for (var i = 0, len = answerPs.length; i < len; i++) {\n            Q(answerPs[i]).then(resolve, reject);\n        }\n    });\n}\n\nPromise.prototype.race = function () {\n    return this.then(Q.race);\n};\n\n/**\n * Constructs a Promise with a promise descriptor object and optional fallback\n * function.  The descriptor contains methods like when(rejected), get(name),\n * set(name, value), post(name, args), and delete(name), which all\n * return either a value, a promise for a value, or a rejection.  The fallback\n * accepts the operation name, a resolver, and any further arguments that would\n * have been forwarded to the appropriate method above had a method been\n * provided with the proper name.  The API makes no guarantees about the nature\n * of the returned object, apart from that it is usable whereever promises are\n * bought and sold.\n */\nQ.makePromise = Promise;\nfunction Promise(descriptor, fallback, inspect) {\n    if (fallback === void 0) {\n        fallback = function (op) {\n            return reject(new Error(\n                \"Promise does not support operation: \" + op\n            ));\n        };\n    }\n    if (inspect === void 0) {\n        inspect = function () {\n            return {state: \"unknown\"};\n        };\n    }\n\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, args) {\n        var result;\n        try {\n            if (descriptor[op]) {\n                result = descriptor[op].apply(promise, args);\n            } else {\n                result = fallback.call(promise, op, args);\n            }\n        } catch (exception) {\n            result = reject(exception);\n        }\n        if (resolve) {\n            resolve(result);\n        }\n    };\n\n    promise.inspect = inspect;\n\n    // XXX deprecated `valueOf` and `exception` support\n    if (inspect) {\n        var inspected = inspect();\n        if (inspected.state === \"rejected\") {\n            promise.exception = inspected.reason;\n        }\n\n        promise.valueOf = function () {\n            var inspected = inspect();\n            if (inspected.state === \"pending\" ||\n                inspected.state === \"rejected\") {\n                return promise;\n            }\n            return inspected.value;\n        };\n    }\n\n    return promise;\n}\n\nPromise.prototype.toString = function () {\n    return \"[object Promise]\";\n};\n\nPromise.prototype.then = function (fulfilled, rejected, progressed) {\n    var self = this;\n    var deferred = defer();\n    var done = false;   // ensure the untrusted promise makes at most a\n                        // single call to one of the callbacks\n\n    function _fulfilled(value) {\n        try {\n            return typeof fulfilled === \"function\" ? fulfilled(value) : value;\n        } catch (exception) {\n            return reject(exception);\n        }\n    }\n\n    function _rejected(exception) {\n        if (typeof rejected === \"function\") {\n            makeStackTraceLong(exception, self);\n            try {\n                return rejected(exception);\n            } catch (newException) {\n                return reject(newException);\n            }\n        }\n        return reject(exception);\n    }\n\n    function _progressed(value) {\n        return typeof progressed === \"function\" ? progressed(value) : value;\n    }\n\n    Q.nextTick(function () {\n        self.promiseDispatch(function (value) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_fulfilled(value));\n        }, \"when\", [function (exception) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_rejected(exception));\n        }]);\n    });\n\n    // Progress propagator need to be attached in the current tick.\n    self.promiseDispatch(void 0, \"when\", [void 0, function (value) {\n        var newValue;\n        var threw = false;\n        try {\n            newValue = _progressed(value);\n        } catch (e) {\n            threw = true;\n            if (Q.onerror) {\n                Q.onerror(e);\n            } else {\n                throw e;\n            }\n        }\n\n        if (!threw) {\n            deferred.notify(newValue);\n        }\n    }]);\n\n    return deferred.promise;\n};\n\nQ.tap = function (promise, callback) {\n    return Q(promise).tap(callback);\n};\n\n/**\n * Works almost like \"finally\", but not called for rejections.\n * Original resolution value is passed through callback unaffected.\n * Callback may return a promise that will be awaited for.\n * @param {Function} callback\n * @returns {Q.Promise}\n * @example\n * doSomething()\n *   .then(...)\n *   .tap(console.log)\n *   .then(...);\n */\nPromise.prototype.tap = function (callback) {\n    callback = Q(callback);\n\n    return this.then(function (value) {\n        return callback.fcall(value).thenResolve(value);\n    });\n};\n\n/**\n * Registers an observer on a promise.\n *\n * Guarantees:\n *\n * 1. that fulfilled and rejected will be called only once.\n * 2. that either the fulfilled callback or the rejected callback will be\n *    called, but not both.\n * 3. that fulfilled and rejected will not be called in this turn.\n *\n * @param value      promise or immediate reference to observe\n * @param fulfilled  function to be called with the fulfilled value\n * @param rejected   function to be called with the rejection exception\n * @param progressed function to be called on any progress notifications\n * @return promise for the return value from the invoked callback\n */\nQ.when = when;\nfunction when(value, fulfilled, rejected, progressed) {\n    return Q(value).then(fulfilled, rejected, progressed);\n}\n\nPromise.prototype.thenResolve = function (value) {\n    return this.then(function () { return value; });\n};\n\nQ.thenResolve = function (promise, value) {\n    return Q(promise).thenResolve(value);\n};\n\nPromise.prototype.thenReject = function (reason) {\n    return this.then(function () { throw reason; });\n};\n\nQ.thenReject = function (promise, reason) {\n    return Q(promise).thenReject(reason);\n};\n\n/**\n * If an object is not a promise, it is as \"near\" as possible.\n * If a promise is rejected, it is as \"near\" as possible too.\n * If it’s a fulfilled promise, the fulfillment value is nearer.\n * If it’s a deferred promise and the deferred has been resolved, the\n * resolution is \"nearer\".\n * @param object\n * @returns most resolved (nearest) form of the object\n */\n\n// XXX should we re-do this?\nQ.nearer = nearer;\nfunction nearer(value) {\n    if (isPromise(value)) {\n        var inspected = value.inspect();\n        if (inspected.state === \"fulfilled\") {\n            return inspected.value;\n        }\n    }\n    return value;\n}\n\n/**\n * @returns whether the given object is a promise.\n * Otherwise it is a fulfilled value.\n */\nQ.isPromise = isPromise;\nfunction isPromise(object) {\n    return object instanceof Promise;\n}\n\nQ.isPromiseAlike = isPromiseAlike;\nfunction isPromiseAlike(object) {\n    return isObject(object) && typeof object.then === \"function\";\n}\n\n/**\n * @returns whether the given object is a pending promise, meaning not\n * fulfilled or rejected.\n */\nQ.isPending = isPending;\nfunction isPending(object) {\n    return isPromise(object) && object.inspect().state === \"pending\";\n}\n\nPromise.prototype.isPending = function () {\n    return this.inspect().state === \"pending\";\n};\n\n/**\n * @returns whether the given object is a value or fulfilled\n * promise.\n */\nQ.isFulfilled = isFulfilled;\nfunction isFulfilled(object) {\n    return !isPromise(object) || object.inspect().state === \"fulfilled\";\n}\n\nPromise.prototype.isFulfilled = function () {\n    return this.inspect().state === \"fulfilled\";\n};\n\n/**\n * @returns whether the given object is a rejected promise.\n */\nQ.isRejected = isRejected;\nfunction isRejected(object) {\n    return isPromise(object) && object.inspect().state === \"rejected\";\n}\n\nPromise.prototype.isRejected = function () {\n    return this.inspect().state === \"rejected\";\n};\n\n//// BEGIN UNHANDLED REJECTION TRACKING\n\n// This promise library consumes exceptions thrown in handlers so they can be\n// handled by a subsequent promise.  The exceptions get added to this array when\n// they are created, and removed when they are handled.  Note that in ES6 or\n// shimmed environments, this would naturally be a `Set`.\nvar unhandledReasons = [];\nvar unhandledRejections = [];\nvar reportedUnhandledRejections = [];\nvar trackUnhandledRejections = true;\n\nfunction resetUnhandledRejections() {\n    unhandledReasons.length = 0;\n    unhandledRejections.length = 0;\n\n    if (!trackUnhandledRejections) {\n        trackUnhandledRejections = true;\n    }\n}\n\nfunction trackRejection(promise, reason) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n    if (typeof process === \"object\" && typeof process.emit === \"function\") {\n        Q.nextTick.runAfter(function () {\n            if (array_indexOf(unhandledRejections, promise) !== -1) {\n                process.emit(\"unhandledRejection\", reason, promise);\n                reportedUnhandledRejections.push(promise);\n            }\n        });\n    }\n\n    unhandledRejections.push(promise);\n    if (reason && typeof reason.stack !== \"undefined\") {\n        unhandledReasons.push(reason.stack);\n    } else {\n        unhandledReasons.push(\"(no stack) \" + reason);\n    }\n}\n\nfunction untrackRejection(promise) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n\n    var at = array_indexOf(unhandledRejections, promise);\n    if (at !== -1) {\n        if (typeof process === \"object\" && typeof process.emit === \"function\") {\n            Q.nextTick.runAfter(function () {\n                var atReport = array_indexOf(reportedUnhandledRejections, promise);\n                if (atReport !== -1) {\n                    process.emit(\"rejectionHandled\", unhandledReasons[at], promise);\n                    reportedUnhandledRejections.splice(atReport, 1);\n                }\n            });\n        }\n        unhandledRejections.splice(at, 1);\n        unhandledReasons.splice(at, 1);\n    }\n}\n\nQ.resetUnhandledRejections = resetUnhandledRejections;\n\nQ.getUnhandledReasons = function () {\n    // Make a copy so that consumers can't interfere with our internal state.\n    return unhandledReasons.slice();\n};\n\nQ.stopUnhandledRejectionTracking = function () {\n    resetUnhandledRejections();\n    trackUnhandledRejections = false;\n};\n\nresetUnhandledRejections();\n\n//// END UNHANDLED REJECTION TRACKING\n\n/**\n * Constructs a rejected promise.\n * @param reason value describing the failure\n */\nQ.reject = reject;\nfunction reject(reason) {\n    var rejection = Promise({\n        \"when\": function (rejected) {\n            // note that the error has been handled\n            if (rejected) {\n                untrackRejection(this);\n            }\n            return rejected ? rejected(reason) : this;\n        }\n    }, function fallback() {\n        return this;\n    }, function inspect() {\n        return { state: \"rejected\", reason: reason };\n    });\n\n    // Note that the reason has not been handled.\n    trackRejection(rejection, reason);\n\n    return rejection;\n}\n\n/**\n * Constructs a fulfilled promise for an immediate reference.\n * @param value immediate reference\n */\nQ.fulfill = fulfill;\nfunction fulfill(value) {\n    return Promise({\n        \"when\": function () {\n            return value;\n        },\n        \"get\": function (name) {\n            return value[name];\n        },\n        \"set\": function (name, rhs) {\n            value[name] = rhs;\n        },\n        \"delete\": function (name) {\n            delete value[name];\n        },\n        \"post\": function (name, args) {\n            // Mark Miller proposes that post with no name should apply a\n            // promised function.\n            if (name === null || name === void 0) {\n                return value.apply(void 0, args);\n            } else {\n                return value[name].apply(value, args);\n            }\n        },\n        \"apply\": function (thisp, args) {\n            return value.apply(thisp, args);\n        },\n        \"keys\": function () {\n            return object_keys(value);\n        }\n    }, void 0, function inspect() {\n        return { state: \"fulfilled\", value: value };\n    });\n}\n\n/**\n * Converts thenables to Q promises.\n * @param promise thenable promise\n * @returns a Q promise\n */\nfunction coerce(promise) {\n    var deferred = defer();\n    Q.nextTick(function () {\n        try {\n            promise.then(deferred.resolve, deferred.reject, deferred.notify);\n        } catch (exception) {\n            deferred.reject(exception);\n        }\n    });\n    return deferred.promise;\n}\n\n/**\n * Annotates an object such that it will never be\n * transferred away from this process over any promise\n * communication channel.\n * @param object\n * @returns promise a wrapping of that object that\n * additionally responds to the \"isDef\" message\n * without a rejection.\n */\nQ.master = master;\nfunction master(object) {\n    return Promise({\n        \"isDef\": function () {}\n    }, function fallback(op, args) {\n        return dispatch(object, op, args);\n    }, function () {\n        return Q(object).inspect();\n    });\n}\n\n/**\n * Spreads the values of a promised array of arguments into the\n * fulfillment callback.\n * @param fulfilled callback that receives variadic arguments from the\n * promised array\n * @param rejected callback that receives the exception if the promise\n * is rejected.\n * @returns a promise for the return value or thrown exception of\n * either callback.\n */\nQ.spread = spread;\nfunction spread(value, fulfilled, rejected) {\n    return Q(value).spread(fulfilled, rejected);\n}\n\nPromise.prototype.spread = function (fulfilled, rejected) {\n    return this.all().then(function (array) {\n        return fulfilled.apply(void 0, array);\n    }, rejected);\n};\n\n/**\n * The async function is a decorator for generator functions, turning\n * them into asynchronous generators.  Although generators are only part\n * of the newest ECMAScript 6 drafts, this code does not cause syntax\n * errors in older engines.  This code should continue to work and will\n * in fact improve over time as the language improves.\n *\n * ES6 generators are currently part of V8 version 3.19 with the\n * --harmony-generators runtime flag enabled.  SpiderMonkey has had them\n * for longer, but under an older Python-inspired form.  This function\n * works on both kinds of generators.\n *\n * Decorates a generator function such that:\n *  - it may yield promises\n *  - execution will continue when that promise is fulfilled\n *  - the value of the yield expression will be the fulfilled value\n *  - it returns a promise for the return value (when the generator\n *    stops iterating)\n *  - the decorated function returns a promise for the return value\n *    of the generator or the first rejected promise among those\n *    yielded.\n *  - if an error is thrown in the generator, it propagates through\n *    every following yield until it is caught, or until it escapes\n *    the generator function altogether, and is translated into a\n *    rejection for the promise returned by the decorated generator.\n */\nQ.async = async;\nfunction async(makeGenerator) {\n    return function () {\n        // when verb is \"send\", arg is a value\n        // when verb is \"throw\", arg is an exception\n        function continuer(verb, arg) {\n            var result;\n\n            // Until V8 3.19 / Chromium 29 is released, SpiderMonkey is the only\n            // engine that has a deployed base of browsers that support generators.\n            // However, SM's generators use the Python-inspired semantics of\n            // outdated ES6 drafts.  We would like to support ES6, but we'd also\n            // like to make it possible to use generators in deployed browsers, so\n            // we also support Python-style generators.  At some point we can remove\n            // this block.\n\n            if (typeof StopIteration === \"undefined\") {\n                // ES6 Generators\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    return reject(exception);\n                }\n                if (result.done) {\n                    return Q(result.value);\n                } else {\n                    return when(result.value, callback, errback);\n                }\n            } else {\n                // SpiderMonkey Generators\n                // FIXME: Remove this case when SM does ES6 generators.\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    if (isStopIteration(exception)) {\n                        return Q(exception.value);\n                    } else {\n                        return reject(exception);\n                    }\n                }\n                return when(result, callback, errback);\n            }\n        }\n        var generator = makeGenerator.apply(this, arguments);\n        var callback = continuer.bind(continuer, \"next\");\n        var errback = continuer.bind(continuer, \"throw\");\n        return callback();\n    };\n}\n\n/**\n * The spawn function is a small wrapper around async that immediately\n * calls the generator and also ends the promise chain, so that any\n * unhandled errors are thrown instead of forwarded to the error\n * handler. This is useful because it's extremely common to run\n * generators at the top-level to work with libraries.\n */\nQ.spawn = spawn;\nfunction spawn(makeGenerator) {\n    Q.done(Q.async(makeGenerator)());\n}\n\n// FIXME: Remove this interface once ES6 generators are in SpiderMonkey.\n/**\n * Throws a ReturnValue exception to stop an asynchronous generator.\n *\n * This interface is a stop-gap measure to support generator return\n * values in older Firefox/SpiderMonkey.  In browsers that support ES6\n * generators like Chromium 29, just use \"return\" in your generator\n * functions.\n *\n * @param value the return value for the surrounding generator\n * @throws ReturnValue exception with the value.\n * @example\n * // ES6 style\n * Q.async(function* () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      return foo + bar;\n * })\n * // Older SpiderMonkey style\n * Q.async(function () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      Q.return(foo + bar);\n * })\n */\nQ[\"return\"] = _return;\nfunction _return(value) {\n    throw new QReturnValue(value);\n}\n\n/**\n * The promised function decorator ensures that any promise arguments\n * are settled and passed as values (`this` is also settled and passed\n * as a value).  It will also ensure that the result of a function is\n * always a promise.\n *\n * @example\n * var add = Q.promised(function (a, b) {\n *     return a + b;\n * });\n * add(Q(a), Q(B));\n *\n * @param {function} callback The function to decorate\n * @returns {function} a function that has been decorated.\n */\nQ.promised = promised;\nfunction promised(callback) {\n    return function () {\n        return spread([this, all(arguments)], function (self, args) {\n            return callback.apply(self, args);\n        });\n    };\n}\n\n/**\n * sends a message to a value in a future turn\n * @param object* the recipient\n * @param op the name of the message operation, e.g., \"when\",\n * @param args further arguments to be forwarded to the operation\n * @returns result {Promise} a promise for the result of the operation\n */\nQ.dispatch = dispatch;\nfunction dispatch(object, op, args) {\n    return Q(object).dispatch(op, args);\n}\n\nPromise.prototype.dispatch = function (op, args) {\n    var self = this;\n    var deferred = defer();\n    Q.nextTick(function () {\n        self.promiseDispatch(deferred.resolve, op, args);\n    });\n    return deferred.promise;\n};\n\n/**\n * Gets the value of a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to get\n * @return promise for the property value\n */\nQ.get = function (object, key) {\n    return Q(object).dispatch(\"get\", [key]);\n};\n\nPromise.prototype.get = function (key) {\n    return this.dispatch(\"get\", [key]);\n};\n\n/**\n * Sets the value of a property in a future turn.\n * @param object    promise or immediate reference for object object\n * @param name      name of property to set\n * @param value     new value of property\n * @return promise for the return value\n */\nQ.set = function (object, key, value) {\n    return Q(object).dispatch(\"set\", [key, value]);\n};\n\nPromise.prototype.set = function (key, value) {\n    return this.dispatch(\"set\", [key, value]);\n};\n\n/**\n * Deletes a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to delete\n * @return promise for the return value\n */\nQ.del = // XXX legacy\nQ[\"delete\"] = function (object, key) {\n    return Q(object).dispatch(\"delete\", [key]);\n};\n\nPromise.prototype.del = // XXX legacy\nPromise.prototype[\"delete\"] = function (key) {\n    return this.dispatch(\"delete\", [key]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param value     a value to post, typically an array of\n *                  invocation arguments for promises that\n *                  are ultimately backed with `resolve` values,\n *                  as opposed to those backed with URLs\n *                  wherein the posted value can be any\n *                  JSON serializable object.\n * @return promise for the return value\n */\n// bound locally because it is used by other methods\nQ.mapply = // XXX As proposed by \"Redsandro\"\nQ.post = function (object, name, args) {\n    return Q(object).dispatch(\"post\", [name, args]);\n};\n\nPromise.prototype.mapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.post = function (name, args) {\n    return this.dispatch(\"post\", [name, args]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param ...args   array of invocation arguments\n * @return promise for the return value\n */\nQ.send = // XXX Mark Miller's proposed parlance\nQ.mcall = // XXX As proposed by \"Redsandro\"\nQ.invoke = function (object, name /*...args*/) {\n    return Q(object).dispatch(\"post\", [name, array_slice(arguments, 2)]);\n};\n\nPromise.prototype.send = // XXX Mark Miller's proposed parlance\nPromise.prototype.mcall = // XXX As proposed by \"Redsandro\"\nPromise.prototype.invoke = function (name /*...args*/) {\n    return this.dispatch(\"post\", [name, array_slice(arguments, 1)]);\n};\n\n/**\n * Applies the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param args      array of application arguments\n */\nQ.fapply = function (object, args) {\n    return Q(object).dispatch(\"apply\", [void 0, args]);\n};\n\nPromise.prototype.fapply = function (args) {\n    return this.dispatch(\"apply\", [void 0, args]);\n};\n\n/**\n * Calls the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ[\"try\"] =\nQ.fcall = function (object /* ...args*/) {\n    return Q(object).dispatch(\"apply\", [void 0, array_slice(arguments, 1)]);\n};\n\nPromise.prototype.fcall = function (/*...args*/) {\n    return this.dispatch(\"apply\", [void 0, array_slice(arguments)]);\n};\n\n/**\n * Binds the promised function, transforming return values into a fulfilled\n * promise and thrown errors into a rejected one.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ.fbind = function (object /*...args*/) {\n    var promise = Q(object);\n    var args = array_slice(arguments, 1);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\nPromise.prototype.fbind = function (/*...args*/) {\n    var promise = this;\n    var args = array_slice(arguments);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\n\n/**\n * Requests the names of the owned properties of a promised\n * object in a future turn.\n * @param object    promise or immediate reference for target object\n * @return promise for the keys of the eventually settled object\n */\nQ.keys = function (object) {\n    return Q(object).dispatch(\"keys\", []);\n};\n\nPromise.prototype.keys = function () {\n    return this.dispatch(\"keys\", []);\n};\n\n/**\n * Turns an array of promises into a promise for an array.  If any of\n * the promises gets rejected, the whole array is rejected immediately.\n * @param {Array*} an array (or promise for an array) of values (or\n * promises for values)\n * @returns a promise for an array of the corresponding values\n */\n// By Mark Miller\n// http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&rev=1308776521#allfulfilled\nQ.all = all;\nfunction all(promises) {\n    return when(promises, function (promises) {\n        var pendingCount = 0;\n        var deferred = defer();\n        array_reduce(promises, function (undefined, promise, index) {\n            var snapshot;\n            if (\n                isPromise(promise) &&\n                (snapshot = promise.inspect()).state === \"fulfilled\"\n            ) {\n                promises[index] = snapshot.value;\n            } else {\n                ++pendingCount;\n                when(\n                    promise,\n                    function (value) {\n                        promises[index] = value;\n                        if (--pendingCount === 0) {\n                            deferred.resolve(promises);\n                        }\n                    },\n                    deferred.reject,\n                    function (progress) {\n                        deferred.notify({ index: index, value: progress });\n                    }\n                );\n            }\n        }, void 0);\n        if (pendingCount === 0) {\n            deferred.resolve(promises);\n        }\n        return deferred.promise;\n    });\n}\n\nPromise.prototype.all = function () {\n    return all(this);\n};\n\n/**\n * Returns the first resolved promise of an array. Prior rejected promises are\n * ignored.  Rejects only if all promises are rejected.\n * @param {Array*} an array containing values or promises for values\n * @returns a promise fulfilled with the value of the first resolved promise,\n * or a rejected promise if all promises are rejected.\n */\nQ.any = any;\n\nfunction any(promises) {\n    if (promises.length === 0) {\n        return Q.resolve();\n    }\n\n    var deferred = Q.defer();\n    var pendingCount = 0;\n    array_reduce(promises, function (prev, current, index) {\n        var promise = promises[index];\n\n        pendingCount++;\n\n        when(promise, onFulfilled, onRejected, onProgress);\n        function onFulfilled(result) {\n            deferred.resolve(result);\n        }\n        function onRejected(err) {\n            pendingCount--;\n            if (pendingCount === 0) {\n                err.message = (\"Q can't get fulfillment value from any promise, all \" +\n                    \"promises were rejected. Last error message: \" + err.message);\n                deferred.reject(err);\n            }\n        }\n        function onProgress(progress) {\n            deferred.notify({\n                index: index,\n                value: progress\n            });\n        }\n    }, undefined);\n\n    return deferred.promise;\n}\n\nPromise.prototype.any = function () {\n    return any(this);\n};\n\n/**\n * Waits for all promises to be settled, either fulfilled or\n * rejected.  This is distinct from `all` since that would stop\n * waiting at the first rejection.  The promise returned by\n * `allResolved` will never be rejected.\n * @param promises a promise for an array (or an array) of promises\n * (or values)\n * @return a promise for an array of promises\n */\nQ.allResolved = deprecate(allResolved, \"allResolved\", \"allSettled\");\nfunction allResolved(promises) {\n    return when(promises, function (promises) {\n        promises = array_map(promises, Q);\n        return when(all(array_map(promises, function (promise) {\n            return when(promise, noop, noop);\n        })), function () {\n            return promises;\n        });\n    });\n}\n\nPromise.prototype.allResolved = function () {\n    return allResolved(this);\n};\n\n/**\n * @see Promise#allSettled\n */\nQ.allSettled = allSettled;\nfunction allSettled(promises) {\n    return Q(promises).allSettled();\n}\n\n/**\n * Turns an array of promises into a promise for an array of their states (as\n * returned by `inspect`) when they have all settled.\n * @param {Array[Any*]} values an array (or promise for an array) of values (or\n * promises for values)\n * @returns {Array[State]} an array of states for the respective values.\n */\nPromise.prototype.allSettled = function () {\n    return this.then(function (promises) {\n        return all(array_map(promises, function (promise) {\n            promise = Q(promise);\n            function regardless() {\n                return promise.inspect();\n            }\n            return promise.then(regardless, regardless);\n        }));\n    });\n};\n\n/**\n * Captures the failure of a promise, giving an oportunity to recover\n * with a callback.  If the given promise is fulfilled, the returned\n * promise is fulfilled.\n * @param {Any*} promise for something\n * @param {Function} callback to fulfill the returned promise if the\n * given promise is rejected\n * @returns a promise for the return value of the callback\n */\nQ.fail = // XXX legacy\nQ[\"catch\"] = function (object, rejected) {\n    return Q(object).then(void 0, rejected);\n};\n\nPromise.prototype.fail = // XXX legacy\nPromise.prototype[\"catch\"] = function (rejected) {\n    return this.then(void 0, rejected);\n};\n\n/**\n * Attaches a listener that can respond to progress notifications from a\n * promise's originating deferred. This listener receives the exact arguments\n * passed to ``deferred.notify``.\n * @param {Any*} promise for something\n * @param {Function} callback to receive any progress notifications\n * @returns the given promise, unchanged\n */\nQ.progress = progress;\nfunction progress(object, progressed) {\n    return Q(object).then(void 0, void 0, progressed);\n}\n\nPromise.prototype.progress = function (progressed) {\n    return this.then(void 0, void 0, progressed);\n};\n\n/**\n * Provides an opportunity to observe the settling of a promise,\n * regardless of whether the promise is fulfilled or rejected.  Forwards\n * the resolution to the returned promise when the callback is done.\n * The callback can return a promise to defer completion.\n * @param {Any*} promise\n * @param {Function} callback to observe the resolution of the given\n * promise, takes no arguments.\n * @returns a promise for the resolution of the given promise when\n * ``fin`` is done.\n */\nQ.fin = // XXX legacy\nQ[\"finally\"] = function (object, callback) {\n    return Q(object)[\"finally\"](callback);\n};\n\nPromise.prototype.fin = // XXX legacy\nPromise.prototype[\"finally\"] = function (callback) {\n    if (!callback || typeof callback.apply !== \"function\") {\n        throw new Error(\"Q can't apply finally callback\");\n    }\n    callback = Q(callback);\n    return this.then(function (value) {\n        return callback.fcall().then(function () {\n            return value;\n        });\n    }, function (reason) {\n        // TODO attempt to recycle the rejection with \"this\".\n        return callback.fcall().then(function () {\n            throw reason;\n        });\n    });\n};\n\n/**\n * Terminates a chain of promises, forcing rejections to be\n * thrown as exceptions.\n * @param {Any*} promise at the end of a chain of promises\n * @returns nothing\n */\nQ.done = function (object, fulfilled, rejected, progress) {\n    return Q(object).done(fulfilled, rejected, progress);\n};\n\nPromise.prototype.done = function (fulfilled, rejected, progress) {\n    var onUnhandledError = function (error) {\n        // forward to a future turn so that ``when``\n        // does not catch it and turn it into a rejection.\n        Q.nextTick(function () {\n            makeStackTraceLong(error, promise);\n            if (Q.onerror) {\n                Q.onerror(error);\n            } else {\n                throw error;\n            }\n        });\n    };\n\n    // Avoid unnecessary `nextTick`ing via an unnecessary `when`.\n    var promise = fulfilled || rejected || progress ?\n        this.then(fulfilled, rejected, progress) :\n        this;\n\n    if (typeof process === \"object\" && process && process.domain) {\n        onUnhandledError = process.domain.bind(onUnhandledError);\n    }\n\n    promise.then(void 0, onUnhandledError);\n};\n\n/**\n * Causes a promise to be rejected if it does not get fulfilled before\n * some milliseconds time out.\n * @param {Any*} promise\n * @param {Number} milliseconds timeout\n * @param {Any*} custom error message or Error object (optional)\n * @returns a promise for the resolution of the given promise if it is\n * fulfilled before the timeout, otherwise rejected.\n */\nQ.timeout = function (object, ms, error) {\n    return Q(object).timeout(ms, error);\n};\n\nPromise.prototype.timeout = function (ms, error) {\n    var deferred = defer();\n    var timeoutId = setTimeout(function () {\n        if (!error || \"string\" === typeof error) {\n            error = new Error(error || \"Timed out after \" + ms + \" ms\");\n            error.code = \"ETIMEDOUT\";\n        }\n        deferred.reject(error);\n    }, ms);\n\n    this.then(function (value) {\n        clearTimeout(timeoutId);\n        deferred.resolve(value);\n    }, function (exception) {\n        clearTimeout(timeoutId);\n        deferred.reject(exception);\n    }, deferred.notify);\n\n    return deferred.promise;\n};\n\n/**\n * Returns a promise for the given value (or promised value), some\n * milliseconds after it resolved. Passes rejections immediately.\n * @param {Any*} promise\n * @param {Number} milliseconds\n * @returns a promise for the resolution of the given promise after milliseconds\n * time has elapsed since the resolution of the given promise.\n * If the given promise rejects, that is passed immediately.\n */\nQ.delay = function (object, timeout) {\n    if (timeout === void 0) {\n        timeout = object;\n        object = void 0;\n    }\n    return Q(object).delay(timeout);\n};\n\nPromise.prototype.delay = function (timeout) {\n    return this.then(function (value) {\n        var deferred = defer();\n        setTimeout(function () {\n            deferred.resolve(value);\n        }, timeout);\n        return deferred.promise;\n    });\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided as an array, and returns a promise.\n *\n *      Q.nfapply(FS.readFile, [__filename])\n *      .then(function (content) {\n *      })\n *\n */\nQ.nfapply = function (callback, args) {\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfapply = function (args) {\n    var deferred = defer();\n    var nodeArgs = array_slice(args);\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided individually, and returns a promise.\n * @example\n * Q.nfcall(FS.readFile, __filename)\n * .then(function (content) {\n * })\n *\n */\nQ.nfcall = function (callback /*...args*/) {\n    var args = array_slice(arguments, 1);\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfcall = function (/*...args*/) {\n    var nodeArgs = array_slice(arguments);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Wraps a NodeJS continuation passing function and returns an equivalent\n * version that returns a promise.\n * @example\n * Q.nfbind(FS.readFile, __filename)(\"utf-8\")\n * .then(console.log)\n * .done()\n */\nQ.nfbind =\nQ.denodeify = function (callback /*...args*/) {\n    if (callback === undefined) {\n        throw new Error(\"Q can't wrap an undefined function\");\n    }\n    var baseArgs = array_slice(arguments, 1);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        Q(callback).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nfbind =\nPromise.prototype.denodeify = function (/*...args*/) {\n    var args = array_slice(arguments);\n    args.unshift(this);\n    return Q.denodeify.apply(void 0, args);\n};\n\nQ.nbind = function (callback, thisp /*...args*/) {\n    var baseArgs = array_slice(arguments, 2);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        function bound() {\n            return callback.apply(thisp, arguments);\n        }\n        Q(bound).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nbind = function (/*thisp, ...args*/) {\n    var args = array_slice(arguments, 0);\n    args.unshift(this);\n    return Q.nbind.apply(void 0, args);\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback with a given array of arguments, plus a provided callback.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param {Array} args arguments to pass to the method; the callback\n * will be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nmapply = // XXX As proposed by \"Redsandro\"\nQ.npost = function (object, name, args) {\n    return Q(object).npost(name, args);\n};\n\nPromise.prototype.nmapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.npost = function (name, args) {\n    var nodeArgs = array_slice(args || []);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback, forwarding the given variadic arguments, plus a provided\n * callback argument.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param ...args arguments to pass to the method; the callback will\n * be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nsend = // XXX Based on Mark Miller's proposed \"send\"\nQ.nmcall = // XXX Based on \"Redsandro's\" proposal\nQ.ninvoke = function (object, name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 2);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    Q(object).dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\nPromise.prototype.nsend = // XXX Based on Mark Miller's proposed \"send\"\nPromise.prototype.nmcall = // XXX Based on \"Redsandro's\" proposal\nPromise.prototype.ninvoke = function (name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 1);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * If a function would like to support both Node continuation-passing-style and\n * promise-returning-style, it can end its internal promise chain with\n * `nodeify(nodeback)`, forwarding the optional nodeback argument.  If the user\n * elects to use a nodeback, the result will be sent there.  If they do not\n * pass a nodeback, they will receive the result promise.\n * @param object a result (or a promise for a result)\n * @param {Function} nodeback a Node.js-style callback\n * @returns either the promise or nothing\n */\nQ.nodeify = nodeify;\nfunction nodeify(object, nodeback) {\n    return Q(object).nodeify(nodeback);\n}\n\nPromise.prototype.nodeify = function (nodeback) {\n    if (nodeback) {\n        this.then(function (value) {\n            Q.nextTick(function () {\n                nodeback(null, value);\n            });\n        }, function (error) {\n            Q.nextTick(function () {\n                nodeback(error);\n            });\n        });\n    } else {\n        return this;\n    }\n};\n\nQ.noConflict = function() {\n    throw new Error(\"Q.noConflict only works when Q is used as a global\");\n};\n\n// All code before this point will be filtered from stack traces.\nvar qEndingLine = captureLine();\n\nreturn Q;\n\n});\n"]}